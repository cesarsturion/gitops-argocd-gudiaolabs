name: CI with GitOps - production

on:
  workflow_dispatch:
  push:
    branches:
      - 'feature/*'
      - '!master'
      - '!main'
  # pull_request:
  #   types:
  #     - 'closed'
  # release:
  #   types:
  #     - 'published'

env:
  IMAGE_NAME: "gitops-argocd"
  CONFIG_REPO_NAME: "gudiaolabs-charts"

jobs:
  build:
    name: Build and Pushing the Image
    runs-on: ubuntu-latest
    outputs:
      TAG_VERSION: ${{ steps.set-tag.outputs.tag-output }}
    steps:      
      - uses: actions/checkout@v3
      
      - name: Login to the Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Set the tag
        id: set-tag
        run: |
          # git_hash=${{ github.event.release.name }}
          git_hash="v-${{ github.run_number }}"
          echo "TAG=$git_hash" >> $GITHUB_ENV
          echo "tag-output=$git_hash" >> $GITHUB_OUTPUT

      # - name: Build and Push the Image
      #   run: |
      #     docker build -t ${{ secrets.DOCKER_USER }}/$IMAGE_NAME:${{ env.TAG }} .
      #     docker push ${{ secrets.DOCKER_USER }}/$IMAGE_NAME:${{ env.TAG }}

  deploy: 
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pull-requests: 'write'
    steps:
      - name: Setup SSH
        uses: MrSquaare/ssh-setup-action@v1
        with:
            host: github.com
            private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Dynamically set DATE environment variable
        run: echo "DATE=$(date +'%Y/%m/%d-%H:%M')" >> $GITHUB_ENV

      - run: |
          echo "promoting into dev environment!"
          git config --global user.email ${{ secrets.GIT_USER_EMAIL }}
          git config --global user.name ${{ secrets.GIT_USER_NAME }}

          echo "cloning config repo $CONFIG_REPO_NAME"
          git clone git@github.com:gudiaolabs/gudiaolabs-charts.git

          cd ./$CONFIG_REPO_NAME

          echo "create branch"
          # git checkout main

          echo "updating image tag in values file"
          git_hash=${{ needs.build.outputs.TAG_VERSION }}
          tag=$(cat ./${{ env.IMAGE_NAME }}/values.yaml | grep tag: | awk '{print $2}')

          git pull
          git checkout -b $git_hash

          echo "updating namespace tag in values file"
          namespace_new="production"
          namespace_old=$(cat ./${{ env.IMAGE_NAME }}/values.yaml | grep namespace: | awk '{print $2}')

          echo "updating env tag in values file"
          env_new="production"
          env_old=$(cat ./${{ env.IMAGE_NAME }}/values.yaml | grep env: | awk '{print $2}')

          sed -i "s/$tag/$git_hash/g;s/$namespace_old/$namespace_new/g;s/$env_old/$env_new/g;" ./${{ env.IMAGE_NAME }}/values.yaml

          cat ./${{ env.IMAGE_NAME }}/values.yaml

          git add . && git commit -m "update image tag:$git_hash - ${{ env.DATE }}"

          git push --set-upstream origin $git_hash

          gh issue create --title "My new issue" --body "Here are more details."

          # gh pr create -B $git_hash -H main --title 'Merge branch_to_merge into base_branch' --body 'Created by Github action'

          # gh pr create --title "update image tag:$git_hash - ${{ env.DATE }}" --body "[Automatic]: update image tag:$git_hash - ${{ env.DATE }}"
          # git request-pull $git_hash git@github.com:gudiaolabs/gudiaolabs-charts.git main
        # env:
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


